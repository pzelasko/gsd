#!/usr/bin/env python
import re
from collections import Counter
from pathlib import Path

import click
import pandas as pd


@click.command()
@click.argument('data_dir', type=click.Path(exists=True, file_okay=False))
def main(data_dir):
    data_dir = Path(data_dir)
    divider()
    print('Describing', data_dir)
    divider()
    print('Contents:', *[p.name for p in data_dir.glob('*')])
    divider()
    show_number_of_speakers(data_dir)
    divider()
    show_words_analysis(data_dir / 'text')
    divider()
    show_segment_duration_statistics(data_dir / 'segments')
    divider()


def divider(width=80):
    print('-' * width)


def show_segment_duration_statistics(segments: Path):
    if not segments.exists():
        print('No segments file available')
        return
    durations = []
    with open(segments) as f:
        for line in f:
            parts = line.strip().split()
            begin, end = float(parts[2]), float(parts[3])
            durations.append(end - begin)
    if not durations:
        print(f'There are no segments in {segments}')
        return
    durations = pd.DataFrame({'Duration [s]': durations})
    total = float(durations.sum())
    print('Total duration:', total, 'seconds == ', total / 3600, 'hours')
    print('Number of segments:', len(durations))
    print('Segment statistics:')
    print(durations.describe())


def show_number_of_speakers(data_dir: Path):
    p = data_dir / 'spk2utt'
    if p.exists():
        num_spk = p.read_text().count('\n')
    elif (data_dir / 'utt2spk').exists():
        with open(data_dir / 'utt2spk') as f:
            num_spk = len(set(l.strip().split()[1] for l in f))
    else:
        print('Number of speakers unknown: no spk2utt or utt2spk file present.')
        return
    print('Number of speakers:', num_spk)


def show_words_analysis(text: Path):
    if not text.exists():
        print('No "text" file found')
        return
    words = Counter()
    with text.open() as f:
        for line in f:
            words.update(line.strip().split()[1:])
    print('Number of unique words:', len(words))
    print('Total number of words:', sum(words.values()))
    brackets = re.compile(r'[<\[].+[>\]]')
    print('Symbols in brackets:', *[w for w in words if brackets.match(w)])


if __name__ == '__main__':
    main()
